README
Created Wed Sep 23 10:17:04 AKDT 2015
Copyright (C) 2015 by Raymond E. Marcil <marcilr@gmail.com>


Filelist
========
add.txt
  Add to repository

branching.txt
  Branching
  Some people refer to the branching model in Git as its "killer feature",
  and it certainly sets Git apart in the VCS community.  Why is it so
  special?  The way Git branches is incredibly lightweight, making branching 
  operations nearly instantaneous and switching back and forth between
  branches generally just as fast.  Unlike many other VCSs, Git encourages 
  a workflow that branches and merges often, even multiple times in a day.
  Understanding and mastering this feature gives you a powerful and unique
  tool and can literally change the way that you develop.
  --https://git-scm.com/book/en/v1/Git-Branching

change-history.txt
  View the change history of a file using Git versioning
  http://stackoverflow.com/questions/278192/view-the-change-history-of-a-file-using-git-versioning


check-settings.txt
  Check Settings
  Getting Started - First-Time Git Setup
  http://git-scm.com/book/en/v2/Getting-Started-First-Time-Git-Setup

cli.txt
  The Command Line
  progit-en.478.pdf, Pro Git, p. 36

clone.txt
  Clone repository
  If you want to get a copy of an existing Git repository - for example, a project
  you'd like to contribute to - the command you need is git clone . If you're
  familiar with other VCS systems such as Subversion, you'll notice that the command
  is "clone" and not "checkout".  This is an important distinction - instead
  of getting just a working copy, Git receives a full copy of nearly all data that
  the server has.
  progit-en.478.pdf, Pro Git, p. 44

commands.txt
  Commands for git

commit.txt
  Commit file to repo
  To commit the files in the index: this will create a commit, with a hash,
  and will be kept in the repository history.  Let's do it:
  $ git commit

  https://wiki.debian.org/UsingGit

config.txt
  The git config modifies the .git/config file.

create-repository.txt
  Create repository
  https://guides.github.com/activities/hello-world/

credentials.txt
  Credentials - caching and storing

diff.txt
  Diff
  See differences with diff or nothing if there are no differences.
  https://wiki.debian.org/UsingGit

force-a-pull-to-overwrite-everything.txt
  Git - force a pull to overwrite everything, on every pull
  git fetch origin master
  git reset --hard FETCH_HEAD
  git clean -df
  http://stackoverflow.com/questions/9589814/git-force-a-pull-to-overwrite-everything-on-every-pull

force-git-push-to-overwrite-remote-files.txt
  Force "git push" to overwrite remote files
  http://stackoverflow.com/questions/10510462/force-git-push-to-overwrite-remote-files

gitignore.txt
  Ignoring Files

  Often, you'll have a class of files that you don't want Git to automatically
  add or even show you as being untracked.  These are generally automatically
  generated files such as log files or files produced by your build system.  In
  such cases, you can create a file listing patterns to match them named
 .gitignore .  Here is an example .gitignore file:

  $ cat .gitignore
  *.[oa]
  *~

go-to-particular-revison.txt
  Use git checkout <sha1> to check out a particular commit.
  http://stackoverflow.com/questions/7539130/git-go-to-particular-revision

help.txt
  Help
  If you ever need help while using Git, there are three ways to get the manual
  page (manpage) help for any of the Git commands:

  $ git help <verb>
  $ git <verb> --help
  $ man git-<verb>

  For example, you can get the manpage help for the config command by running

  $ git help config

  progit-en.478.pdf, Pro Git, p. 41

init.txt
  init
  If you're starting to track an existing project in Git, you need to go to
  the project's directory and type:
  $ git init
  https://git-scm.com/book/en/v2/Git-Basics-Getting-a-Git-Repository

links.txt
  Syntax related links

merge-fatal-cannot-do-a-partial-commit-during-a-merge.txt
  Git error on commit after merge - fatal: cannot do a partial commit during a merge
  Solution:
    git commit -i myfile.php
  http://stackoverflow.com/questions/5827944/git-error-on-commit-after-merge-fatal-cannot-do-a-partial-commit-during-a-mer

normal-vs-bare.txt
  Normal vs. bare repositories

push.txt
  Update remote refs along with associated objects

recursive-remove.txt
  Recursive remove

  You can try this:
    $ git rm -rf <directory_name>

  It will force delete the directory.
  
  How to remove a directory from git repository?
  https://stackoverflow.com/questions/6313126/how-to-remove-a-directory-from-git-repository

remove.txt
  Remove a remote:
    $ git remote rm <shortname>
  https://help.github.com/articles/removing-a-remote/

remotes/
  Working with Remotes
  https://git-scm.com/book/en/v2/Git-Basics-Working-with-Remotes

rename-directory.txt
  Rename directory
  http://stackoverflow.com/questions/11183788/in-a-git-repository-how-to-properly-rename-a-directory

restore-delete-file.txt
  Restore deleted file in git

  To restore a deleted file in git:
  $ git restore <deletedFile>

rm.txt
  Delete files or remotes

revert.txt
  To revert commit(s) to a prior commit, using new commits, use 'revert'.
  $ git revert <commit> <commit> ...

repo-config.txt
  To alleviate the following error on server side in gti repo run:
  $ git config receive.denyCurrentBranch ignore

show-remotes.txt
  Show remotes
  Use 'git remote -v' to show URLS of repo's remotes.

submodules/
  Submodules

syntax.txt
  Syntax

TODO
  Items for git syntax

undelete.txt
  I successfully used this simple syntax to undelete a git file
  immediately after deletion.
  -- Find and restore a deleted file in a Git repository
     http://stackoverflow.com/questions/953481/find-and-restore-a-deleted-file-in-a-git-repository
